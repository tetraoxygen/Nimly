This is a well-known game with a number of variants. In the following variant, two players alternately take marbles from a pile. In each move, a player chooses how many marbles to take. The player must take at least one but at most half of the marbles. Then the other player takes a turn. The player who takes the last marble loses.   

Write a program in which the computer plays against a human opponent. Generate a random integer between 10 and 100 to denote the initial size of the pile. Generate a second random integer between 0 and 1 to decide whether the computer or the human takes the first turn. Implement a stupid vs. smart mode for the computer. In stupid mode, the computer simply takes a random legal value (between 1 and n/2) from the pile whenever it has a turn. In smart mode, the computer takes off enough marbles to make the size of the pile a power of 2 minus 1 - that is 3, 7, 15, 31, or 63. That is always a legal move, except when the size of the pile is currently one less than a power of two. In that case, the computer makes a random legal move.   

Note that the computer cannot be beaten in smart mode when it has the first move, unless the pile size happens to be 15, 31, or 63. Of course, a human player who has the first turn and knows the winning strategy can win against the computer.  

Grading:

2 - Only has stupid mode but well commented and can explain the non-working parts (where they are, what the problem is, possible solutions)
3 - meet reqmt's for 2 plus stupid mode is fully functional, comments explain how each major section of your code works, and comments make it easy to connect sections of your code with the flowchart.
4 - meet reqmt's for 3 plus fully functional smart mode.  Helped another student get their program working without just giving them your code.
